spring.application.name=Water
server.port=8081
logging.level.sql=DEBUG
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop

spring.datasource.url=jdbc:postgresql://localhost:54321/mineral_db?currentSchema=water
spring.datasource.username=user
spring.datasource.password=password

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=classpath:sql/data.sql

spring.jpa.open-in-view=false

spring.jpa.properties.hibernate.default_schema=water
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Swagger
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method

# App
bunker.operation.max-per-day=5
bunker.operation.duration-hours=2

# OAuth2 Client Configuration (for logging in)
spring.security.oauth2.client.registration.keycloak.client-id=water-app-client
spring.security.oauth2.client.registration.keycloak.client-secret=VNV3owmEPblLorj3KEELrJNnLyqiQRjC
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=password
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.provider=keycloak

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/water-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/water-realm/protocol/openid-connect/certs


